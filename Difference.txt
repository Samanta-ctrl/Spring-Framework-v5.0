
<!-- ________________________________ Difference b/w SDI and CDI ______________________________________________________-->

<!-- We can easily change the value by setter injection. It doesn't create a new bean instance always like constructor. 
	So setter injection is flexible than constructor injection. -->

<!-- If we use both Constructor Dependency Injection and Setter Dependency Injection , Spring container will override
 	the CDI by SDI. It means , if we define both SDI and CDI on the same attributes, then SDI value will be injected to 
 	that attribute by spring container. -->
 
<!-- without creating new instance , we can change the bean value using setter method -->

<!--  CDI makes the bean object immutable whereas SDI makes it mutable. -->

<!-- Based on all the above observation, One can think of using SDI most of the times over CDI.
	 however if we want to ensure complete dependency then it is preferable to use CDI. -->
	 
	 
 
 